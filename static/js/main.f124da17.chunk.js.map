{"version":3,"sources":["components/Logo/chip.svg","components/Navigation/Navigation.js","components/Signin/Signin.js","components/Register/Register.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","_ref","onRouteChange","isSignedIn","react_default","a","createElement","style","display","justifyContent","onClick","className","Signin","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signinPassword","onSubmitSignIn","fetch","method","headers","Content-Type","body","JSON","stringify","email","state","password","then","response","json","user","id","loadUser","htmlFor","type","name","onChange","href","React","Component","Register","onNameChange","onSubmitRegister","Logo","tilt_default","options","max","height","width","alt","src","brain","ImageLinkForm","onInputChange","onPictureSubmit","Rank","entries","concat","FaceRecognition","imageUrl","box","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","console","log","count","assign","catch","err","_this$state","components_Navigation_Navigation","components_Logo_Logo","components_Rank_Rank","components_ImageLinkForm_ImageLinkForm","components_FaceRecognition_FaceRecognition","components_Signin_Signin","components_Register_Register","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f124da17.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chip.7ae9c5ee.svg\";","import React from 'react';\n\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\n    if (isSignedIn) {\n        return (\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n                <p onClick={() => onRouteChange('signout')} className='f3 link dim black underline pa3 pointer'>Sign out</p>\n            </nav>\n        )\n    } else {\n        return (\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n                <p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign in</p>\n                <p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\n            </nav>\n        )\n    }\n}\n\nexport default Navigation;\n","import React from 'react';\n\nclass Signin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            signInEmail: '',\n            signinPassword: ''\n        }\n    }\n    onEmailChange = (event) => {\n        this.setState({signInEmail: event.target.value})\n    }\n\n    onPasswordChange = (event) => {\n        this.setState({signinPassword: event.target.value})\n    }\n\n    onSubmitSignIn = () => {\n        fetch('https://ancient-reaches-70218.herokuapp.com/signin', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                email: this.state.signInEmail,\n                password: this.state.signinPassword\n            })})\n            .then(response => response.json())\n            .then(user => {\n                if (user.id) {\n                    this.props.loadUser(user);\n                    this.props.onRouteChange('home');\n                }\n            }) \n    }\n\n    render() {\n        const { onRouteChange } = this.props;\n        return (\n            <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n                <div className=\"pa4 black-80\">\n                    <div className=\"measure\">\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                        <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n                        <div className=\"mt3\">\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                            <input \n                                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                                type=\"email\" \n                                name=\"email-address\"  \n                                id=\"email-address\" \n                                onChange={this.onEmailChange}\n                            />\n                        </div>\n                        <div className=\"mv3\">\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                            <input \n                                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                                type=\"password\" \n                                name=\"password\"  \n                                id=\"password\" \n                                onChange={this.onPasswordChange}\n                            />\n                        </div>\n                        </fieldset>\n                        <div className=\"\">\n                        <input \n                            onClick={this.onSubmitSignIn}\n                            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \n                            type=\"submit\" \n                            value=\"Sign in\" \n                        />\n                        </div>\n                        <div className=\"lh-copy mt3\">\n                        <p onClick={() => onRouteChange('register')} href=\"#0\" className=\"f6 link dim black db pointer\">Register</p>\n                        </div>\n                    </div>\n                </div>\n            </article>\n        );\n    }\n}\n\nexport default Signin;","import React from 'react';\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            name: ''\n        }\n    }\n\n    onNameChange = (event) => {\n        this.setState({name: event.target.value})\n    }\n\n    onEmailChange = (event) => {\n        this.setState({email: event.target.value})\n    }\n\n    onPasswordChange = (event) => {\n        this.setState({password: event.target.value})\n    }\n\n    onSubmitRegister = (event) => {\n        fetch('https://ancient-reaches-70218.herokuapp.com/register', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                email: this.state.email,\n                password: this.state.password,\n                name: this.state.name\n            })\n        })\n            .then(response => response.json())\n            .then(user => {\n                if (user.id){\n                    this.props.loadUser(user);\n                    this.props.onRouteChange('home');\n                }\n            })\n    }\n\n    render() {\n        // const { onRouteChange } = this.props;\n        return (\n            <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n                <div className=\"pa4 black-80\">\n                    <div className=\"measure\">\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                        <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n                        <div className=\"mt3\">\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\n                            <input \n                                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                                type=\"text\" \n                                name=\"name\"  \n                                id=\"name\" \n                                onChange={this.onNameChange}\n                            />\n                        </div>\n                        <div className=\"mt3\">\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                            <input \n                                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                                type=\"email\" \n                                name=\"email-address\"  \n                                id=\"email-address\" \n                                onChange={this.onEmailChange}\n                            />\n                        </div>\n                        <div className=\"mv3\">\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                            <input \n                                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                                type=\"password\" \n                                name=\"password\"  \n                                id=\"password\" \n                                onChange={this.onPasswordChange}\n                            />\n                        </div>\n                        </fieldset>\n                        <div className=\"\">\n                        <input \n                            onClick={this.onSubmitRegister}\n                            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \n                            type=\"submit\" \n                            value=\"Register\" \n                        />\n                        </div>\n                    </div>\n                </div>\n            </article>\n        );\n    }\n}\n\nexport default Register;","import React from 'react';\nimport Tilt from 'react-tilt';\nimport './Logo.css';\nimport brain from './chip.svg';\n\nconst Logo = () => {\n    return (\n        <div className='ma4 mt0'>\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 30 }} style={{ height: 150, width: 150 }} >\n                <div className=\"Tilt-inner\">\n                    <img alt='logo' src={brain} width='120' height='120'/>\n                </div>\n            </Tilt>\n        </div>\n    )\n}\n\nexport default Logo;","import React from 'react';\nimport 'tachyons';\nimport './ImageLinkForm.scss';\n\nconst ImageLinkForm = ({ onInputChange, onPictureSubmit }) => {\n    return (\n        <div>\n            <p className='f3'>\n                {'This Magic Brain will detect faces in your pictures. Give it a try!'}\n            </p>\n            <div>\n                <div className='form center pa4 br3 shadow-5'>\n                    <input className='f4 pa2 w-70 center' type='text' onChange={onInputChange} />\n                    <button \n                        className='w-30 grow mt3 f4 link ph3 pv2 dib white bg-light-purple'\n                        onClick={onPictureSubmit}    \n                    >Detect</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ImageLinkForm;","import React from 'react';\n\nconst Rank = ({name, entries}) => {\n    return (\n        <div>\n            <div className='white f3'>\n                {`${name}, your current entry count is...`}\n            </div>\n            <div className='white f1'>\n                {`#${entries}`}\n            </div>\n        </div>\n    )\n}\n\nexport default Rank;","import React from 'react';\nimport './FaceRecognition.css';\n\nconst FaceRecognition = ({ imageUrl, box }) => {\n    return (\n        <div className='center ma'>\n            <div className='absolute mt2'>\n                <img id='inputImage' alt='recognizable' src={imageUrl} width='500' height='auto' />\n                <div className='bounding-box' style={{top:box.topRow, right:box.rightCol, bottom:box.bottomRow, left:box.leftCol}}></div>\n            </div>\n        </div>\n    )\n}\n\nexport default FaceRecognition;\n\n// <div> wrapping the image and box-div must be absolute\n// otherwise the box-div will be off","import React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport './App.css';\n\nconst initialState = {\n  input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id:  '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n}\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: width * clarifaiFace.left_col,\n      topRow: height * clarifaiFace.top_row,\n      rightCol: width - (width * clarifaiFace.right_col),\n      bottomRow: height - (height * clarifaiFace.bottom_row)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onPictureSubmit = () => {\n    this.setState({imageUrl: this.state.input})\n    fetch('https://ancient-reaches-70218.herokuapp.com/imageUrl', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        input: this.state.input\n      })\n    })\n      .then(response => response.json())\n      .then(response => {\n        if (response) {\n          fetch('https://ancient-reaches-70218.herokuapp.com/image', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n          .then(response => response.json())\n          .then(count => {\n            this.setState(Object.assign(this.state.user, {entries: count}))\n          })\n          .catch(console.log);\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(initialState);\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true});\n    }\n    this.setState({route: route});\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        { (route === 'home')\n          ?  <div>\n              <Logo />\n              <Rank name={this.state.user.name} entries={this.state.user.entries} />\n              <ImageLinkForm \n                onInputChange={this.onInputChange} \n                onPictureSubmit={this.onPictureSubmit} \n              />\n              <FaceRecognition box={box} imageUrl={imageUrl} />\n            </div>\n          : (\n             route === 'signin' \n             ?  <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n             :  <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}